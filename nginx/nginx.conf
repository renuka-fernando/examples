# user  nginx;
worker_processes  auto;

# error_log  /var/log/nginx/error.log notice;
error_log  /dev/stderr notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    # include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $host';

    # access_log  /var/log/nginx/access.log  main;
    access_log  /dev/stdout  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 8080;
        listen 8443 ssl;
        server_name localhost;
        ssl_certificate /certs/listener.pem;
        ssl_certificate_key /certs/listener.key;
    
        # Instead of verifying the client certificate, we will just pass it to the upstream service
        # ssl_verify_client optional; # Uncomment if you want to verify client certificates
        # ssl_client_certificate /certs/client.pem;
        ssl_verify_client optional_no_ca;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        location /foo {
            set $api_key $http_api_key;

            if ($arg_api_key) {
                set $api_key $arg_api_key;
            }

            # Remove the API key from the query string
            if ($args ~* "(.*)api_key=[^&]*&?(.*)") {
                set $args $1$2;
            }

            proxy_set_header API-Key $api_key;
            proxy_http_version 1.1;

            # pass the client certificate to the upstream service
            proxy_set_header X-CLIENT-CERTIFICATE $ssl_client_escaped_cert;
            proxy_pass http://envoy:8000;
            # proxy_pass http://upstream-service:8080/;
        }

        location ~ \.(gif|jpg|png)$ {
            root /data/images;
        }
    }

    server {
        listen 8443 ssl;

        ssl_certificate /certs/listener.pem;
        ssl_certificate_key /certs/listener.key;
        ssl_client_certificate /certs/client.pem;
        ssl_verify_client on;

        proxy_set_header X-CLIENT-CERTIFICATE $ssl_client_escaped_cert;

        location / {
            proxy_set_header X-CLIENT-CERTIFICATE $ssl_client_escaped_cert;
            rewrite ^/foo/bar /bar;
            proxy_pass http://upstream-service:8080/;
        }

        location ~ \.(gif|jpg|png)$ {
            root /data/images;
        }
    }
}
