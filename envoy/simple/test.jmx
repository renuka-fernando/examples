<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(users,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampUpPeriod,1)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(duration,1200)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request - Choreo Prod" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="${__P(payload,/Users/renuka/Documents/payloads/data-1MB.json)}" elementType="HTTPFileArg">
                <stringProp name="File.path">${__P(payload,/Users/renuka/Documents/payloads/data-1MB.json)}</stringProp>
                <stringProp name="File.paramname"></stringProp>
                <stringProp name="File.mimetype"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(ip,3a1c8390-5846-48fc-916a-c91ce547d7a8-dev.e1-us-east-azure.choreoapis.dev)}</stringProp>
          <stringProp name="HTTPSampler.port">${__P(port,443)}</stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(proto,https)}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${__P(path,/mediation-test/req-info-mtls-proxy/v1.0/bar)}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJ4NXQiOiJOMkprTmpZMllUZGtabVl4TldNNVltSTJabUkwWlRFNE56ZzRNREkxTVRneVpUaGpaVEppWWciLCJraWQiOiJNbUV5WlRSaFpHTTROamc1WW1SbU9XVXlOalkxT1dReVpURXlNREJoTXpVd01ESTFOak5pWlRkalptWXhZMlkzWWpCaU4ySTRaRFppTW1Jek5qYzJPUV9SUzI1NiIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJlMzJmODZlOS01YTNiLTQxNWUtOGQ1My0xYWFmMDNjMTIxNGQiLCJhdXQiOiJBUFBMSUNBVElPTiIsImF1ZCI6Im1SeUNhbDdyVzF6YUVIOGZhNGRSa0MyREZLVWEiLCJuYmYiOjE3MTg2MDI3NjksImF6cCI6Im1SeUNhbDdyVzF6YUVIOGZhNGRSa0MyREZLVWEiLCJzY29wZSI6ImRlZmF1bHQiLCJvcmdhbml6YXRpb24iOnsidXVpZCI6ImJiZDJkNDhjLTk5MzktNGRmMi05NWYwLWY0YWUwNjM2ZjRiNyJ9LCJpc3MiOiJodHRwczpcL1wvc3RzLnByZXZpZXctZHYuY2hvcmVvLmRldjo0NDNcL29hdXRoMlwvdG9rZW4iLCJleHAiOjE3NTQ2MDI3NjksImlhdCI6MTcxODYwMjc2OSwianRpIjoiNjg2OTgxMTctNzM3YS00MzRkLWIwYTMtNzUxN2IyNmUyNzk3In0.IQ5HmaC5N6yt3MYNeSK_CKeWIdMD7Wu1YKLKkyd_v3Ya62yCucnNK99G1slFulg027Yb9jaelg8EMgFod-ikQq3oELkpzl1iyy6pudm8K_0MSEIOanz2DL6IiS3-9-wGCsMFVxzXNfaCd_sPHFu5jV6P3pO0AO_sMjMWpJI68Go2EBgpf0W15Yc0P8k19WirJ5GVSYxMSERVyPsqc2xepmyxyJ7ctwcMxz-AwR4kgZtI8gyCTqlH1Q0iGu5BTgY893Y7aDyMro-JGhISHQN1MFImzzNfUIJWDl1LKweqaLy3PPfR2Kxwzz5IoxgBRjhdrBN-4NZAw4PnH1-Abl2Gh-WwE5FHP8ODlZudEPZHTi7VV76ku02FtOYmWDrhyHee-uao5bl2HWoWT1WNNNIoo-psNvmfSH3dj_p0yP04MPJeCKPmpi5gk_-ioSOsh3VTbNboXFCgl2Gq9eolnpkNhnisX8pivTD2DYum0aUkT1JYfOF7VBVk8PYxzjl-wgBDhTJ_OCvsN-EzzMPWDFXbePNJ52socPaon2zh6Ppn7qUZyKzHFA7Mnb8scMQbkIiSYaFkLjDyLag8iaUMskXp2gvcOXGWO8xyEuolfmumOCakaGy15r79Lhw8CGmZ4S4iF8Cwhs-BLKKMZNBqz4qw9Gz3rYEOYv_TVz686Hbm08U</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-Request-Id</stringProp>
                <stringProp name="Header.value">renuka-high-payload-test</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
