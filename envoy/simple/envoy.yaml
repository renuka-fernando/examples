admin:
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9000
static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                access_log:
                  - name: file-logger-access-logs-http-connection-manager
                    typed_config:
                      # File Access Log Sink
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        text_format_source:
                          inline_string: >
                            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %REQ(:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %BYTES_RECEIVED% %BYTES_SENT% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST% %DURATION% %REQUEST_DURATION% %REQUEST_TX_DURATION% %RESPONSE_DURATION% %RESPONSE_TX_DURATION%"
                        formatters:
                          - name: envoy.formatter.req_without_query
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery
                upgrade_configs:
                  - upgrade_type: websocket
                    
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: any-domain
                      domains:
                        - "*"
                      routes:
                        - name: upstream-foo
                          match:
                            prefix: "/foo"
                          route:
                            regex_rewrite:
                              pattern:
                                regex: /foo/(.*)
                              substitution: /bar/\1
                            append_x_forwarded_host: true
                            cluster: upstream-service
                        - name: "ready"
                          match:
                            prefix: "/ready"
                          metadata:
                            filter_metadata:
                              cc.router:
                                fields:
                                  kubeprobe:
                                    bool_value: true
                          direct_response:
                            status: 200
                            body:
                              inline_string: '{"message": "ready"}'
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - name: "health"
                          match:
                            prefix: "/health"
                          metadata:
                            filter_metadata:
                              cc.router:
                                kubeprobe: true
                          direct_response:
                            status: 200
                            body:
                              inline_string: '{"message": "healthy"}'
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - name: gateway-timeout
                          match:
                            prefix: "/gateway-timeout"
                          route:
                            cluster: upstream-service
                            timeout: 4.5s
                        - name: no-healthy-upstream
                          match:
                            prefix: "/no-healthy-upstream"
                          route:
                            cluster: no-healthy-upstream-service
                            timeout: 4.5s
                        - name: upstream-connection-failure-after-response
                          match:
                            prefix: "/upstream-connection-failure/after-response"
                          route:
                            cluster: host-service
                        - name: upstream-connection-failure
                          match:
                            prefix: "/upstream-connection-failure"
                          route:
                            cluster: upstream-connection-failure
                        - name: upstream-service-overflow
                          match:
                            prefix: "/upstream-service-overflow"
                          route:
                            cluster: upstream-service-overflow
                        - name: no-upstream-cluster
                          match:
                            prefix: "/no-upstream-cluster"
                          route:
                            cluster_header: "x-envoy-upstream-cluster"
                        - name: upstream-retry-exceeds
                          match:
                            prefix: "/upstream-retry-exceeds"
                          route:
                            cluster: upstream-service
                            retry_policy:
                              retry_on: 5xx
                              num_retries: 3
                              per_try_timeout: 0.5s
                        - name: websocket
                          match:
                            prefix: "/ws"
                          route:
                            cluster: host-service
                            idle_timeout: 300s
                            upgrade_configs:
                              - upgrade_type: websocket
                                enabled: true
                        - name: host
                          match:
                            prefix: "/host"
                          route:
                            regex_rewrite:
                              pattern:
                                regex: '^/host/?'
                              substitution: /
                            cluster: ngrok
                            timeout: 60s
                        - name: upstream-any
                          match:
                            prefix: "/"
                          route:
                            cluster: upstream-service
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                http_protocol_options: {}

  clusters:
    - name: upstream-service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: upstream-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: request_info
                      port_value: 8080
    - name: no-healthy-upstream-service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: upstream-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: foo_bar
                      port_value: 8080
    - name: upstream-connection-failure
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: upstream-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: request_info
                      port_value: 801
    - name: host-service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: local-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 8080
    - name: upstream-service-overflow
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: upstream-service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: request_info
                      port_value: 8080
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: request_info_2
                      port_value: 8081
      circuit_breakers:
        thresholds:
          - max_connections: 1
            max_pending_requests: 1
            max_requests: 3
